@model Repository.ViewModel.UserPaginationViewModel;

@{
    ViewData["Title"] = "Users List";
}

<div class="users_list">
    <div class="users_list_heading p-3 d-flex justify-content-between">
        <div class="fw-bold fs-2 users_heading">Users</div>
        <div class="d-flex">
            <form method="get" action="@Url.Action("UserList")" class="d-flex search_bar">
                <input type="text" id="searchTerm" name="searchTerm" onkeyup="searchUsers()" class="form-control" placeholder="Search"
                    value="@Context.Request.Query["searchTerm"]">
            </form>
            <a  asp-controller="User" asp-action="AddUser" class="btn custom-btn-bg text-white d-flex align-items-center ms-3">+Add user</a>
        </div>
    </div>

    <div class="users_list_body p-4 m-3 table-responsive" id="userListContainer">
        @await Html.PartialAsync("_UserList", Model)
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    let searchTimeout;

    function searchUsers() {
        clearTimeout(searchTimeout);

        searchTimeout = setTimeout(function () {
            let searchTerm = $('#searchTerm').val();
            loadUsers(1, '@Model.SortBy', '@Model.SortOrder', $('#itemsPerPage').val(), searchTerm);
        }, 500); 
    }

    function loadUsers(page, sortBy, sortOrder, pageSize, searchTerm) {
        $.ajax({
            url: '@Url.Action("UserList")',
            type: 'GET',
            data: {
                page: page,
                pageSize: pageSize || $('#itemsPerPage').val(),
                searchTerm: searchTerm || $('#searchTerm').val(), 
                sortBy: sortBy || '@Model.SortBy',
                sortOrder: sortOrder || '@Model.SortOrder'
            },
            headers: { "X-Requested-With": "XMLHttpRequest" }, 
            success: function (data) {
                $("#userListContainer").html(data);
            },
            error: function (xhr, status, error) {
                console.error("Error: ", status, error);
                console.error(xhr.responseText);
            }
        });
    }
</script>