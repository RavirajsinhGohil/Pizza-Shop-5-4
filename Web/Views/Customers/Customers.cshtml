@model Repository.ViewModel.CustomersListViewModel;

@{
    ViewData["Title"] = "Orders";
}


<div class="add_user_heading d-flex justify-content-between" >
    <div class="fw-bold fs-1 d-flex align-items-center">Customers</div>
    <div class="d-flex">

        <div class="form-floating">
            <input type="text" id="searchBox" style="width: 200px !important;" class="form-control me-4"
                placeholder="Search">
            <label for="searchBox" style="color: black;">Search</label>
        </div>

        <select class="form-select me-4" id="timeLog">
            <option value="All Time" selected>All Time</option>
            <option value="Today">Today</option>
            <option value="Last 7 days">Last 7 days</option>
            <option value="Last 30 days">Last 30 days</option>
            <option value="Current Month">Current Month</option>
            <option value="Custom Date">Custom Date</option>
        </select>

        <button type="button" id="exportOrdersBtn" class="btn orderExportBtn text-white fw-bold">Export</button>
    </div>
</div>

<div class="d-flex justify-content-end orderDateFilter">
    <div class="form-floating  me-4">
        <input type="date" class="form-control dateFilter" id="fromDate" placeholder="name@example.com">
        <label for="floatingInput">From Date</label>
    </div>

    <div class="form-floating me-4">
        <input type="date" class="form-control dateFilter" id="toDate" placeholder="name@example.com">
        <label for="floatingInput">To Date</label>
    </div>

    <button id="searchOrdersBtn" class="btn btn-primary orderSearchBtn fw-bold me-4">Search</button>

    <button id="resetFilters" class="btn bg-white orderFilterCancelBtn fw-bold">Clear</button>
</div>

<div class="add_user_form" style="box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .15) !important;">
    <div id="orderList" class="p-3">
        @* @Html.Partial("_CustomerList",) *@
    </div>
</div>

<script>
    $(document).ready(function () {
        let currentPage = parseInt("@Model.CurrentPage") || 1;
        let searchTerm = '';
        let pageSize = parseInt("@Model.PageSize") || 5;
        let totalItems = $('#totalItemssss').val() || 5;
        let totalPages = $('#totalPagessss').val() || 1;
        let sortBy = 'OrderId';
        let sortOrder = 'asc';
        let searchTimeout = 0;
        let currentSortBy = "OrderId";
        let currentSortOrder = "asc";
        @* let statusLog = ''; *@
        let timeLog = '';
        @* let fromDate = ''; *@
        @* let toDate = ''; *@

        $(document).on('click', "#searchOrdersBtn", function () {
            searchTerm = $("#searchBox").val().trim();
            @* statusLog = $("#statusLog").val(); *@
            timeLog = $("#timeLog").val();
            fromDate = $("#fromDate").val();
            toDate = $("#toDate").val();

            fetchItems(searchTerm, 1, pageSize, sortBy, sortOrder, statusLog, timeLog, fromDate, toDate);
        });

        fetchItems(searchTerm, 1, pageSize, sortBy, sortOrder, statusLog, timeLog, fromDate, toDate);

        function fetchItems(search = "", page = 1, pageSizeValue = 5, sortBy, sortOrder, statusLog, timeLog, fromDate, toDate) {

            $.ajax({
                url: '@Url.Action("GetOrderByPagination", "Orders")',
                type: 'GET',
                data: {
                    searchTerm: search,
                    page: page,
                    pageSize: pageSizeValue,
                    sortBy: sortBy,
                    sortOrder: sortOrder,
                    statusLog: statusLog,
                    timeLog: timeLog,
                    fromDate: fromDate,
                    toDate: toDate
                },
                success: function (data) {
                    $("#orderList").html(data);
                    let $data = $(data);
                    totalPages = parseInt($('#totalPageess').val()) || 1;
                    totalItems = parseInt($('#totalItems').val()) || 5;

                    //  Update UI with new data
                    $("#orderList").html(data);

                    //  Update current page & page size
                    currentPage = page;
                    pageSize = pageSizeValue;

                    updatePaginationButtons();
                },
                error: function (xhr, status, error) {
                    console.error("AJAX Error:", status, error);
                }
            });
            @* disableSortIcons(); *@
        }

        function updatePaginationButtons() {
            $('#prevPage').prop('disabled', currentPage <= 1);
            $('#nextPage').prop('disabled', currentPage >= totalPages);
            $('#currentPageDisplay').text(`Showing 1- ${pageSize} of ${totalItems}`);
        }

        //  Handle Previous Page Click
        $(document).on('click', '#prevPage', function () {
            if (currentPage > 1) {
                fetchItems(searchTerm, currentPage - 1, pageSize, sortBy, sortOrder, statusLog, timeLog, fromDate, toDate);
            }
        });

        $(document).on('click', '#nextPage', function () {
            if (currentPage < totalPages) {
                fetchItems(searchTerm, currentPage + 1, pageSize, sortBy, sortOrder, statusLog, timeLog, fromDate, toDate);
            }
        });

        $(document).on('change', '#pageSizes', function () {
            pageSize = parseInt($(this).val()) || 2;
            fetchItems(searchTerm, 1, pageSize, sortBy, sortOrder, statusLog, timeLog, fromDate, toDate);
        });

        $(document).on('keyup', '#searchBox', function () {
            clearTimeout(searchTimeout);
            searchTerm = $(this).val();

            @* searchTimeout = setTimeout(() => {
                fetchItems(searchTerm, 1, pageSize, sortBy, sortOrder, statusLog, timeLog, fromDate, toDate);
            }, 100); *@
        });

        //For sorting according to sortBy and sortOrder
        $(document).on("click", ".sort-items", function (e) {
            e.preventDefault();

            currentSortBy = $(this).data("column");
            @* let pageNumber = $(this).data("page"); *@

                if (sortBy === currentSortBy) {
                currentSortOrder = currentSortOrder === "asc" ? "desc" : "asc";
            }
            else {
                sortBy = currentSortBy;
                sortOrder = "asc";
            }

            fetchItems(searchTerm, 1, pageSize, sortBy, currentSortOrder, statusLog, timeLog, fromDate, toDate)
            sortOrder = currentSortOrder === "asc" ? "desc" : "asc";
        });

        //For filter data according to status log
        $(document).on('change', "#statusLog", function (e) {
            console.log("statusLog changed");
            statusLog = $(this).val();
            console.log(statusLog);
        });

        //For filter data according to time log
        $(document).on('change', "#timeLog", function (e) {
            console.log("timeLog changed");
            timeLog = $(this).val();
            console.log(timeLog);
        });

        //For clicking on clear button to reset filters
        $(document).on('click', '#resetFilters', function () {
            console.log("Clear Button clicked");
            $("#searchBox").val("");
            $("#statusLog").val("All Status");
            $("#timeLog").val("All Time");
            $("#fromDate").val('');
            $("#toDate").val('');

            fetchItems('', 1, pageSize, sortBy, sortOrder, "All Status", "All Time", '', '');
        });

        //For clicking on eye button of the corresponding order
        $(document).on('click', '.eyeBtn', function () {
            console.log("EYE Button clicked");
        });

        $(document).on('click', "#exportOrdersBtn", function () {
            var searchTerm = $("#searchBox").val()|| "";
            var statusLog = $("#statusLog").val();
            var timeLog = $("#timeLog").val();

            var url = `/Orders/ExportOrdersInExcel?searchTerm=${encodeURIComponent(searchTerm)}&statusLog=${encodeURIComponent(statusLog)}&timeLog=${encodeURIComponent(timeLog)}`;

            window.location.href = url;
        });
    });


    
</script>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
<script
    src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>