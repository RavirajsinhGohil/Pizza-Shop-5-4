@model Repository.ViewModel.MenuItemViewModel
<div class="table-responsive">
    <table class="table" style="border-top: none;">
        <thead>
            <tr>
                <th scope="col" style="width: 40px; border-top: none;">
                    <input class="form-check-input" type="checkbox" value="" >
                </th>
                <th scope="col" style="border-top: none;">Name</th>
                <th scope="col" style="border-top: none;" class="text-center">Unit</th>
                <th scope="col" style="border-top: none;" class="text-center">Rate</th>
                <th scope="col" style="border-top: none;" class="text-center">Quantity</th>
            </tr>
        </thead>
        <tbody>
            <form id="addExistingModifiersForm">
                @foreach (var modifier in Model.Modifiers)
                {
                    <tr>
                        <th scope="row" style="border-top: 1px solid rgb(182, 177, 177);">
                            <input class="form-check-input rowModifierCheck" type="checkbox"
                                data-id='@modifier.ModifierId' data-name="@modifier.Name">
                            <input type="hidden" data-id="@modifier.ModifierId">
                        </th>
                        <td style=" border-top: 1px solid rgb(182, 177, 177);">
                            @* <img src="~/@item.Itemimage" class="me-2" style="width: 40px; height: 40px;" alt="abcd"> *@
                            @modifier.Name
                        </td>
                        <td class="text-center" style=" border-top: 1px solid rgb(182, 177, 177);">@modifier.Unit</td>
                        <td class="text-center" style=" border-top: 1px solid rgb(182, 177, 177);">@modifier.Rate</td>
                        <td class="text-center" style=" border-top: 1px solid rgb(182, 177, 177);">@modifier.Quantity</td>
                    </tr>
                }
            </form>
        </tbody>
    </table>
</div>
<div class="d-flex align-items-center justify-content-end">
        <label for="pageSizes" class="pe-3">Items per page:</label>
    <div class="mt-3 d-flex me-3 " style="height: 37px; width: 50px; margin: 0px !important;">
        <select style="border-radius: 5px; height: 40px;" id="pageSizes" >
            @foreach (var size in new[] { 1, 2, 5, 10 })
            {
                <option value="@size" selected="@(Model.PageSize == size ? "selected" : null)">@size</option>
            }
        </select>
    </div>

    <div class="d-flex justify-content-between align-items-center">
        <span id="currentPageDisplay">Page @Model.CurrentPage of @Model.TotalPages</span>
        <button id="prevPage" class="mx-2" @(Model.CurrentPage == 1 ? "disabled" : "") style="border: 1px solid grey; background-color: white; border-radius: 5px;
        "><i class="bi bi-chevron-left"></i></button>
        <button id="nextPage" class="ms-2" @(Model.CurrentPage == Model.TotalPages ? "disabled" :
            "") style="border: 1px solid grey; background-color: white; border-radius: 5px;"><i class="bi bi-chevron-right"></i></button>
    </div>
</div>
<div class="create_cancel_btn my-3">
    <button type="button" id="saveAddExistingModifiers" class="btn btn-primary">Add</button>
    <a class="btn bg-white border-primary" style="border: 1px solid blue;">Cancel</a>
</div>
<span id="totalPagessss" style="display: none;">@Model.TotalPages</span>
<span id="totalItemssss" style="display: none;">@Model.totalItems</span>
<input type="hidden" id="totalItems" value="@Model.totalItems" />
<input type="hidden" id="totalPageess" value="@Model.TotalPages" />
<script>
   
</script>
@* <script>
    $(document).ready(function () {
            // For menu items all check
        const mainCheck = document.getElementById("ModifierMainCheck").addEventListener("change", function (e) {
        console.log("Checked main checkbox of Modifier");
        let chechBoxes = document.querySelectorAll(".ModifiersCheck");
        chechBoxes.forEach((checkBox) => {
        checkBox.checked = e.target.checked;
    })
    });

    // Trigger the AJAX call when the edit link is clicked
    $('body').on('click', '.edit-icon-modifier', function (e) {
        e.preventDefault();
        var itemId = $(this).data('id');
            console.log(itemId);
            $.ajax({
                url: '@Url.Action("EditModifier", "Menu")',
                type: 'GET',
                data: { id: itemId },
                success: function (response) {
                    $('#EditModifierModal .modal-content').html(response);
                },
                error: function (xhr, status, error) {
                    console.log('Error:', error);
                    alert('There was an error loading the item data.');
                }
            });
        });
    });

    //Post method for EditModifierForm
    $(document).on("submit", "#EditModifierForm", function (e) {
    e.preventDefault();

    var formData = $(this).serialize();
    var actionUrl = $(this).attr("action");

    $.ajax({
        url: actionUrl,
        type: "POST",
        data: formData,
        success: function (response) {
            if (response.success) {
                $("#EditModifierModal").modal("hide");
                $(".modal-backdrop").remove();
                $("body").removeClass("modal-open");
                alert(response.message);
            }
        },
        error: function (xhr, status, error) {
            console.log("Error:", xhr.responseText);
            alert("Error updating modifier.");
        }
    });
});
</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
    crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script> *@